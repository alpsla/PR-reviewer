import React, { useState } from 'react';
import { 
  ChevronLeft, 
  ExternalLink, 
  Copy, 
  Check, 
  Download, 
  Share,
  AlertTriangle,
  CheckCircle,
  Circle,
  Info,
  X
} from 'lucide-react';

const ReviewReport = ({ isDarkMode = false }) => {
  const [copied, setCopied] = useState(false);
  const [showExportModal, setShowExportModal] = useState(false);

  // Mock data remains the same as previous example

  const ExportModal = () => (
    <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50">
      <div className={`relative w-full max-w-md p-6 rounded-lg shadow-xl mx-4 ${
        isDarkMode ? 'bg-gray-800' : 'bg-white'
      }`}>
        <button 
          onClick={() => setShowExportModal(false)}
          className={`absolute top-4 right-4 p-1 rounded-full ${
            isDarkMode ? 'hover:bg-gray-700' : 'hover:bg-gray-100'
          }`}
        >
          <X className="w-5 h-5" />
        </button>

        <h2 className={`text-xl font-semibold mb-4 ${
          isDarkMode ? 'text-white' : 'text-gray-900'
        }`}>
          Export Review Report
        </h2>

        <div className="space-y-4">
          <button
            onClick={() => {
              /* Copy logic */
              setCopied(true);
              setTimeout(() => setCopied(false), 2000);
            }}
            className={`w-full p-4 rounded-lg border flex items-center space-x-3 ${
              isDarkMode 
                ? 'bg-gray-700 border-gray-600 hover:bg-gray-600' 
                : 'bg-white border-gray-200 hover:bg-gray-50'
            }`}
          >
            {copied ? <Check className="w-5 h-5" /> : <Copy className="w-5 h-5" />}
            <div className="text-left">
              <p className={`font-medium ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>
                {copied ? 'Copied!' : 'Copy to Clipboard'}
              </p>
              <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>
                Copy formatted report for pasting
              </p>
            </div>
          </button>

          <button
            onClick={() => {/* Download logic */}}
            className={`w-full p-4 rounded-lg border flex items-center space-x-3 ${
              isDarkMode 
                ? 'bg-gray-700 border-gray-600 hover:bg-gray-600' 
                : 'bg-white border-gray-200 hover:bg-gray-50'
            }`}
          >
            <Download className="w-5 h-5" />
            <div className="text-left">
              <p className={`font-medium ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>
                Download as Markdown
              </p>
              <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>
                Save report to your device
              </p>
            </div>
          </button>

          <div className={`mt-6 p-4 rounded-lg ${
            isDarkMode ? 'bg-gray-900/50' : 'bg-gray-50'
          }`}>
            <h3 className={`text-sm font-medium mb-3 ${
              isDarkMode ? 'text-gray-300' : 'text-gray-700'
            }`}>
              Want to comment on GitHub?
            </h3>
            <ol className="space-y-2">
              <li>
                <a 
                  href="#" 
                  target="_blank"
                  rel="noopener noreferrer"
                  className={`text-sm flex items-center space-x-2 ${
                    isDarkMode ? 'text-blue-400' : 'text-blue-600'
                  }`}
                >
                  <ExternalLink className="w-4 h-4" />
                  <span>1. Open PR in GitHub</span>
                </a>
              </li>
              <li className="text-sm flex items-center space-x-2">
                <Copy className={isDarkMode ? 'text-gray-400' : 'text-gray-600'} />
                <span className={isDarkMode ? 'text-gray-400' : 'text-gray-600'}>
                  2. Copy review feedback (from above)
                </span>
              </li>
              <li className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>
                3. Paste into GitHub PR comment
              </li>
            </ol>
          </div>
        </div>
      </div>
    </div>
  );

  // Rest of the report components remain the same until the actions section

  return (
    <div className={`min-h-screen ${
      isDarkMode 
        ? 'bg-gradient-to-b from-gray-900 via-gray-800 to-gray-900' 
        : 'bg-gradient-to-b from-gray-50 via-blue-50/20 to-gray-50'
    }`}>
      <div className="max-w-4xl mx-auto px-4 py-6">
        {/* Navigation Bar */}
        <div className="flex justify-between items-center mb-6">
          <button className={`flex items-center space-x-2 ${
            isDarkMode ? 'text-gray-300 hover:text-blue-400' : 'text-gray-600 hover:text-blue-600'
          } transition-colors`}>
            <ChevronLeft className="w-5 h-5" />
            <span>Review Another PR</span>
          </button>
          
          <button
            onClick={() => setShowExportModal(true)}
            className={`px-4 py-2 rounded-md ${
              isDarkMode
                ? 'bg-blue-600 hover:bg-blue-500'
                : 'bg-blue-600 hover:bg-blue-700'
            } text-white transition-colors`}
          >
            Export Report
          </button>
        </div>

        {/* Report content remains the same */}
        {/* ... */}

        {/* Show modal when needed */}
        {showExportModal && <ExportModal />}
      </div>
    </div>
  );
};

export default ReviewReport;